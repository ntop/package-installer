#!/bin/bash
#
#  Copyright (C) 2002-25 - ntop.org
#
#  http://www.ntop.org/
#
##############################

set -e
set -o pipefail

# Exit function
function checkExit {
    {
	if (whiptail --title "Exit" --yesno "Do you want to exit?" 8 78); then
    	    exit
	else
    	    mainMenu
	fi
    }
}

##############################

function install_clickhouse() {
    if test -f "/usr/bin/lsb_release"; then
	if ! test -f "/usr/share/keyrings/clickhouse-keyring.gpg"; then
	    # Install prerequisite packages
	    apt-get install -y apt-transport-https ca-certificates curl gnupg

	    # Download the ClickHouse GPG key and store it in the keyring
	    curl -fsSL 'https://packages.clickhouse.com/rpm/lts/repodata/repomd.xml.key' | sudo gpg --dearmor -o /usr/share/keyrings/clickhouse-keyring.gpg

	    # Get the system architecture
	    ARCH=$(dpkg --print-architecture)

	    # Add the ClickHouse repository to apt sources
	    echo "deb [signed-by=/usr/share/keyrings/clickhouse-keyring.gpg arch=${ARCH}] https://packages.clickhouse.com/deb stable main" | sudo tee /etc/apt/sources.list.d/clickhouse.list

	    # Update apt package lists
	    apt update
	    apt -y install clickhouse-client clickhouse-server
	fi
    else
	yum install -y yum-utils
	yum-config-manager --add-repo https://packages.clickhouse.com/rpm/clickhouse.repo
	yum install -y clickhouse-client clickhouse-server
    fi
}

##############################

function install() {
    if test -f "/usr/bin/lsb_release"; then
	apt -y install $1 || true
    else
	dnf install -y $1 || true
    fi

    EXIT_CODE=$?
    if [ "$EXIT_CODE" = "0" ]; then
	whiptail --title "Report" --msgbox "$1 installed successfully. $2" 12 80
    else
	whiptail --title "Error" --msgbox "Error while installing $1" 12 80
    fi
}

##############################

function remove() {
    if test -f "/usr/bin/lsb_release"; then
	apt -y remove $1 || true
    else
	dnf remove -y $1 || true
    fi

    EXIT_CODE=$?
    if [ "$EXIT_CODE" = "0" ]; then
	whiptail --title "Report" --msgbox "$1 removed successfully" 12 80
    else
	whiptail --title "Error" --msgbox "Error while removing $1" 12 80
    fi
}

##############################

function installMenu {
    # Create a whiptail checklist
    OPTIONS=$(whiptail --title "System Setup" --checklist \
		       "Select the components you want to install:" 20 78 12 \
       		       "ntopng"    "ntopng" OFF \
		       "nedge"     "ntopng Edge (nEdge)" OFF \
       		       "clickhouse" "ClickHouse database" OFF \
		       "nprobe" "Network Probe" OFF \
       		       "cento"  "High speed nProbe (100 Gbit)" OFF \
       		       "zc"     "PF_RING Zero Copy" OFF \
		       "n2disk" "Packet to disk" OFF \
		       "ntap"   "Network tap" OFF \
       		       "nscrub" "DDoS traffic scrubber" OFF \
       		       "ipt_geofence" "Network protection" OFF \
		       3>&1 1>&2 2>&3)

    EXIT_STATUS=$?

    if [ $EXIT_STATUS = 0 ]; then
	if [[ $OPTIONS == *"ntopng"* ]]; then
	    install "ntopng ntopng-data"
	fi

	if [[ $OPTIONS == *"nedge"* ]]; then
	    install "nedge ntopng-data"
	fi

	if [[ $OPTIONS == *"clickhouse"* ]]; then
	    install_clickhouse
	fi

	if [[ $OPTIONS == *"nprobe"* ]]; then
	    install "nprobe"
	fi

	if [[ $OPTIONS == *"cento"* ]]; then
	    install "cento"
	fi

	if [[ $OPTIONS == *"zc"* ]]; then
	    install "pfring pfring-dkms" "Please run 'sudo pf_ringcfg' to configure ZC drivers and interfaces"
	fi

	if [[ $OPTIONS == *"n2disk"* ]]; then
	    install "n2disk"
	fi

	if [[ $OPTIONS == *"ntap"* ]]; then
	    install "ntap"
	fi

	if [[ $OPTIONS == *"nscrub"* ]]; then
	    install "nscrub"
	fi

	if [[ $OPTIONS == *"ipt_geofence"* ]]; then
	    install "ipt_geofence"
	fi
    fi

    mainMenu
}

##############################

function removeMenu {
    # Create a whiptail checklist
    OPTIONS=$(whiptail --title "System Setup" --checklist \
		       "Select the components you want to remove:" 20 78 12 \
       		       "ntopng" "ntopng web console" OFF \
		       "nedge"     "ntopng Edge (nEdge)" OFF \
		       "nprobe" "Network Probe" OFF \
       		       "cento"  "High speed nProbe (100 Gbit)" OFF \
       		       "zc"     "PF_RING Zero Copy" OFF \
		       "n2disk" "Packet to disk" OFF \
		       "ntap"   "Network tap" OFF \
       		       "nscrub" "DDoS traffic scrubber" OFF \
       		       "ipt_geofence" "Network protection" OFF \
		       3>&1 1>&2 2>&3)

    EXIT_STATUS=$?

    if [ $EXIT_STATUS = 0 ]; then
	if [[ $OPTIONS == *"ntopng"* ]]; then
	    remove "ntopng ntopng-data"
	fi

	if [[ $OPTIONS == *"nedge"* ]]; then
	    remove "nedge ntopng-data"
	fi

	if [[ $OPTIONS == *"nprobe"* ]]; then
	    remove "nprobe"
	fi

	if [[ $OPTIONS == *"cento"* ]]; then
	    remove "cento"
	fi

	if [[ $OPTIONS == *"zc"* ]]; then
	    remove "pfring pfring-dkms"
	fi

	if [[ $OPTIONS == *"n2disk"* ]]; then
	    remove "n2disk"
	fi

	if [[ $OPTIONS == *"ntap"* ]]; then
	    remove "ntap"
	fi

	if [[ $OPTIONS == *"nscrub"* ]]; then
	    remove "nscrub"
	fi

	if [[ $OPTIONS == *"ipt_geofence"* ]]; then
	    remove "ipt_geofence"
	fi
    fi

    mainMenu
}


##############################

# Main menu function
function mainMenu {
	# Main Menu
	CHOICE=$(
	    whiptail --title "Select the operation you want to do" --menu "Choose an option:" 25 78 16 \
         	     "<-- Exit" "" \
         	     "Install" "Install ntop packages." \
         	     "Remove"  "Remove installed ntop packages." 3>&2 2>&1 1>&3
	      )

	# Choosing the choice
	case $CHOICE in
            "<-- Exit")
                checkExit
        	;;
            "Install")
                installMenu
        	;;
            "Remove")
                removeMenu
        	;;
	esac
}

# Changing the colors of whiptail
export NEWT_COLORS='
root=black,blue
listbox=black,lightgray
actlistbox=black,lightgray
checkbox=black,lightgray
'

if [ "$EUID" -ne 0 ]
then
    echo "This tool requires root privileges. Try again with \"sudo \" please ..."
    exit
fi

# Starting the main loop
mainMenu
